' Original method from FF

' Starting function:

=FORECAST.ETS(target_date, values, timeline, [seasonality], [data_completion], [aggregation])

' Desired behavior, when pressing `,` or `DEL` with `[seasonality]` selected:

=FORECAST.ETS(target_date, values, timeline,, [data_completion], [aggregation])

' Actual behavior:

'    `,`:
=FORECAST.ETS(target_date, values, timeline, ,, [data_completion], [aggregation])

'  `DEL`:
=FORECAST.ETS(target_date, values, timeline, [data_completion], [aggregation])

=TEST.FUNC(req_param1, ,, [opt_param2], [opt_param3])


' A - ${3/.+/, /}
' B - ${3:[opt_param1]}

' A takes the value of 3 ('[opt_param1]'), but the regex forces it to become ', ' since .+ matches the entirity of '[opt_param1]'
' The idea is for this to then be removed if 3: is reduced to a blank string.

' However, optional parameters need to become ',' when deleted:

=TEST.FUNC(req_param1,, [opt_param2], [opt_param3])

' or

=TEST.FUNC(req_param1, , [opt_param2], [opt_param3])



' Build strings based on number of parameters?

' The only weird thing this string does:
'    "contents": "TEST(${1:req_param1}, ${2:req_param2}${3/.+/, /}${3:${4:[opt_param1]}${5/.+/, /}${5:[opt_param2]}})",

' Is that deleting [opt_param2] in this state:

=TEST(req_param1, req_param2, , *[opt_param2]*)

' gives this:

=TEST(1, 1, )

' which, while functional, would ideally give:

=TEST(1, 1)

' but you could argue that the proper way to use the string if no optional parameters are needed is to delete them here:

=TEST(1, 1, *[opt_param1], [opt_param2]*)

' which does give:

TEST(1, 1)


' The real problems arise when you increase the number of optional parameters n > 2.

' Deleting [opt_param2] in this state:

=TEST(1, 1, , *[opt_param2]*, [opt_param3])

' Gives the following invalid formula:

=TEST(1, 1, , [opt_param3])

' (unless [opt_param3] is deleted, which then loops back to the train of thought for n = 2)


' Potentially exploitable behavior, so long as there is a way to both deduplicate "Hello World"
' and a way to still display two different strings from the expression conditionally.
'       "contents": "${1/(?<FOO>o)*+/(?{FOO}bar:hiss)/}${1:Hello World}",

=hissHello World*Hello World*

' press 'a'

=hissaa

' instead of 'a', press 'o'

=baro

' instead of 'a', press 'DEL'

=hiss


'       "contents": "${1/(?<FOO>o)+/(?{FOO}bar:hiss)/}${1:Hello World}",

=Hellbar World*Hello World*
' press 'a'
=aa
' instead of 'a', press 'o'
=baro
' instead of 'a', press 'DEL'
=

'  Two current problems:
'    TEST(1, *opt_param1*, opt_param2, opt_param3) ->     DEL -> TEST(1, , opt_param2, opt_param3)
'                                                     Desired -> TEST(1,, opt_param2, opt_param3)
'      
'               TEST(1, opt_param1,, *opt_param3*) ->     DEL -> TEST(1, opt_param1,)
'                                                     Desired -> TEST(1, opt_param1)
'                                                     OR
'                                                     Desired -> TEST(1, opt_param1,,)